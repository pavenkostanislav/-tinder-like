"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const devkit_1 = require("@nrwl/devkit");
const devkit_2 = require("@nrwl/devkit");
const application_1 = require("../application/application");
const remote_1 = require("../remote/remote");
const project_1 = require("../utils/project");
function host(tree, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const projects = (0, devkit_2.getProjects)(tree);
        const remotesToGenerate = [];
        const remotesToIntegrate = [];
        if (options.remotes && options.remotes.length > 0) {
            options.remotes.forEach((remote) => {
                if (!projects.has(remote)) {
                    remotesToGenerate.push(remote);
                }
                else {
                    remotesToIntegrate.push(remote);
                }
            });
        }
        const installTask = yield (0, application_1.default)(tree, Object.assign(Object.assign({}, options), { mfe: true, mfeType: 'host', routing: true, remotes: remotesToIntegrate !== null && remotesToIntegrate !== void 0 ? remotesToIntegrate : [], port: 4200, federationType: options.dynamic ? 'dynamic' : 'static', skipFormat: true }));
        for (const remote of remotesToGenerate) {
            yield (0, remote_1.default)(tree, Object.assign(Object.assign({}, options), { name: remote, host: (0, project_1.normalizeProjectName)(options.name, options.directory), skipFormat: true }));
        }
        if (!options.skipFormat) {
            yield (0, devkit_1.formatFiles)(tree);
        }
        return installTask;
    });
}
exports.default = host;
//# sourceMappingURL=host.js.map